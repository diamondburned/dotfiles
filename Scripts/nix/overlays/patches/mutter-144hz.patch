diff --git a/clutter/clutter/clutter-main.c b/clutter/clutter/clutter-main.c
index 1753048f8..74a191c66 100644
--- a/clutter/clutter/clutter-main.c
+++ b/clutter/clutter/clutter-main.c
@@ -96,7 +96,7 @@ static gboolean clutter_use_fuzzy_picking    = FALSE;
 static gboolean clutter_enable_accessibility = TRUE;
 static gboolean clutter_sync_to_vblank       = TRUE;
 
-static guint clutter_default_fps             = 60;
+static guint clutter_default_fps             = 144;
 
 static ClutterTextDirection clutter_text_direction = CLUTTER_TEXT_DIRECTION_LTR;
 
diff --git a/clutter/clutter/clutter-pan-action.c b/clutter/clutter/clutter-pan-action.c
index fa08efaf9..d84b43691 100644
--- a/clutter/clutter/clutter-pan-action.c
+++ b/clutter/clutter/clutter-pan-action.c
@@ -67,7 +67,7 @@
 #define FLOAT_EPSILON   (1e-15)
 
 static const gfloat min_velocity = 0.1f; // measured in px/ms
-static const gfloat reference_fps = 60.0f; // the fps assumed for the deceleration rate
+static const gfloat reference_fps = 144.0f; // the fps assumed for the deceleration rate
 static const gfloat default_deceleration_rate = 0.95f;
 static const gfloat default_acceleration_factor = 1.0f;
 
diff --git a/clutter/clutter/cogl/clutter-stage-cogl.c b/clutter/clutter/cogl/clutter-stage-cogl.c
index c134048ae..322480161 100644
--- a/clutter/clutter/cogl/clutter-stage-cogl.c
+++ b/clutter/clutter/cogl/clutter-stage-cogl.c
@@ -176,11 +176,11 @@ clutter_stage_cogl_schedule_update (ClutterStageWindow *stage_window,
 
   refresh_rate = stage_cogl->refresh_rate;
   if (refresh_rate == 0.0)
-    refresh_rate = 60.0;
+    refresh_rate = 144.0;
 
   refresh_interval = (gint64) (0.5 + 1000000 / refresh_rate);
   if (refresh_interval == 0)
-    refresh_interval = 16667; /* 1/60th second */
+    refresh_interval = 6945; /* 1/144th second */
 
   stage_cogl->update_time = stage_cogl->last_presentation_time + 1000 * sync_delay;
 
diff --git a/src/backends/x11/meta-backend-x11.c b/src/backends/x11/meta-backend-x11.c
index c1c976986..bea775987 100644
--- a/src/backends/x11/meta-backend-x11.c
+++ b/src/backends/x11/meta-backend-x11.c
@@ -777,12 +777,6 @@ meta_backend_x11_class_init (MetaBackendX11Class *klass)
 static void
 meta_backend_x11_init (MetaBackendX11 *x11)
 {
-  /* XInitThreads() is needed to use the "threaded swap wait" functionality
-   * in Cogl - see meta_renderer_x11_create_cogl_renderer(). We call it here
-   * to hopefully call it before any other use of XLib.
-   */
-  XInitThreads();
-
   /* We do X11 event retrieval ourselves */
   clutter_x11_disable_event_retrieval ();
 }
diff --git a/src/backends/x11/meta-renderer-x11.c b/src/backends/x11/meta-renderer-x11.c
index e070d63b2..b86b30a1d 100644
--- a/src/backends/x11/meta-renderer-x11.c
+++ b/src/backends/x11/meta-renderer-x11.c
@@ -84,14 +84,6 @@ meta_renderer_x11_create_cogl_renderer (MetaRenderer *renderer)
   cogl_xlib_renderer_set_foreign_display (cogl_renderer, xdisplay);
   cogl_xlib_renderer_request_reset_on_video_memory_purge (cogl_renderer, TRUE);
 
-  /* Set up things so that if the INTEL_swap_event extension is not present,
-   * but the driver is known to have good thread support, we use an extra
-   * thread and call glXWaitVideoSync() in the thread. This allows idles
-   * to work properly, even when Mutter is constantly redrawing new frames;
-   * otherwise, without INTEL_swap_event, we'll just block in glXSwapBuffers().
-   */
-  cogl_xlib_renderer_set_threaded_swap_wait_enabled (cogl_renderer, TRUE);
-
   return cogl_renderer;
 }
 
diff --git a/src/compositor/meta-window-actor.c b/src/compositor/meta-window-actor.c
index 4456e1892..bc1581233 100644
--- a/src/compositor/meta-window-actor.c
+++ b/src/compositor/meta-window-actor.c
@@ -985,7 +985,7 @@ queue_send_frame_messages_timeout (MetaWindowActor *self)
     }
   else
     {
-      refresh_rate = 60.0f;
+      refresh_rate = 144.0f;
     }
 
   current_time =